plugins {
    id 'com.diffplug.spotless'
    id 'jacoco'
}

dependencies {
    testImplementation project(":matcv")
    
    def junitVersion = "5.8.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
}

jacoco {
    // Java 17 support
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    systemProperty "java.library.path", "/usr/lib/jni"

    finalizedBy jacocoTestReport, jacocoTestCoverageVerification

    testLogging {
        events "started", "failed"
    }
}

jacocoTestReport {
    // generate only HTML report
    reports {
        xml.enabled = false
        csv.enabled = false
        html.enabled = true
    }
    sourceDirectories.from = project(':matcv').sourceSets.main.java.srcDirs
    classDirectories.from = project(':matcv').sourceSets.main.java.classesDirectory
}

jacocoTestCoverageVerification {
    sourceDirectories.from = project(':matcv').sourceSets.main.java.srcDirs
    classDirectories.from = project(':matcv').sourceSets.main.java.classesDirectory
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude:  [
                // none
            ])
        }))
    }
}

// run spotless and format code before the build
testClasses.dependsOn spotlessApply
